name: Build and test the Backend application

on:
  workflow_call:
    inputs:
      NODE_VERSION:
        required: true        
        type: string
    secrets:
      SONAR_TOKEN:
        required: false
      SONAR_HOST_URL:
        required: false

jobs:
  build:
    runs-on: ubuntu-latest

    steps:      
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Required for Sonar analysis
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ inputs.NODE_VERSION }}
          cache: 'npm'
          
      - name: Install Dependencies
        run: |
          npm ci
          npm install -g @nestjs/cli

      - name: Setup Java for SonarQube
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Cache SonarQube packages
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Run Unit Tests with Coverage
        run: npm run test:cov
  
      - name: Build Application
        run: npm run build      
        
      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@v5.1.0
        with:
          args: >
            -Dsonar.projectKey=${{ github.event.repository.name }}
            -Dsonar.projectName=${{ github.event.repository.name }}
            -Dsonar.organization=imaginamos
            -Dsonar.sources=./src
            -Dsonar.exclusions=**/node_modules/**,**/dist/**,**/coverage/**
            -Dsonar.tests=./src
            -Dsonar.test.inclusions=**/*.spec.ts,**/*.test.ts
            -Dsonar.typescript.lcov.reportPaths=./coverage/lcov.info
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 
        

      - name: SonarQube Quality Gate
        uses: SonarSource/sonarqube-quality-gate-action@v1.1.0
        with:
          scanMetadataReportFile: .scannerwork/report-task.txt
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        continue-on-error: true

